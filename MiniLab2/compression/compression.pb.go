// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: compression/compression.proto

package compression

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuccessStatus int32

const (
	SuccessStatus_SUCCESS_STATUS_SUCCESS SuccessStatus = 0
	SuccessStatus_SUCCESS_STATUS_FAIL    SuccessStatus = 1
)

// Enum value maps for SuccessStatus.
var (
	SuccessStatus_name = map[int32]string{
		0: "SUCCESS_STATUS_SUCCESS",
		1: "SUCCESS_STATUS_FAIL",
	}
	SuccessStatus_value = map[string]int32{
		"SUCCESS_STATUS_SUCCESS": 0,
		"SUCCESS_STATUS_FAIL":    1,
	}
)

func (x SuccessStatus) Enum() *SuccessStatus {
	p := new(SuccessStatus)
	*p = x
	return p
}

func (x SuccessStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SuccessStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_compression_compression_proto_enumTypes[0].Descriptor()
}

func (SuccessStatus) Type() protoreflect.EnumType {
	return &file_compression_compression_proto_enumTypes[0]
}

func (x SuccessStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SuccessStatus.Descriptor instead.
func (SuccessStatus) EnumDescriptor() ([]byte, []int) {
	return file_compression_compression_proto_rawDescGZIP(), []int{0}
}

type CompressionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName   string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileBytes  []byte `protobuf:"bytes,2,opt,name=file_bytes,json=fileBytes,proto3" json:"file_bytes,omitempty"`
	RoutingKey string `protobuf:"bytes,3,opt,name=routing_key,json=routingKey,proto3" json:"routing_key,omitempty"`
}

func (x *CompressionRequest) Reset() {
	*x = CompressionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compression_compression_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressionRequest) ProtoMessage() {}

func (x *CompressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compression_compression_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressionRequest.ProtoReflect.Descriptor instead.
func (*CompressionRequest) Descriptor() ([]byte, []int) {
	return file_compression_compression_proto_rawDescGZIP(), []int{0}
}

func (x *CompressionRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CompressionRequest) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

func (x *CompressionRequest) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

type CompressionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      SuccessStatus `protobuf:"varint,1,opt,name=success,proto3,enum=compression.SuccessStatus" json:"success,omitempty"`
	ErrorMessage string        `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *CompressionResponse) Reset() {
	*x = CompressionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compression_compression_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressionResponse) ProtoMessage() {}

func (x *CompressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compression_compression_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressionResponse.ProtoReflect.Descriptor instead.
func (*CompressionResponse) Descriptor() ([]byte, []int) {
	return file_compression_compression_proto_rawDescGZIP(), []int{1}
}

func (x *CompressionResponse) GetSuccess() SuccessStatus {
	if x != nil {
		return x.Success
	}
	return SuccessStatus_SUCCESS_STATUS_SUCCESS
}

func (x *CompressionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_compression_compression_proto protoreflect.FileDescriptor

var file_compression_compression_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22,
	0x70, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2a, 0x44, 0x0a, 0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x32, 0x62, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x4d,
	0x69, 0x6e, 0x69, 0x4c, 0x61, 0x62, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compression_compression_proto_rawDescOnce sync.Once
	file_compression_compression_proto_rawDescData = file_compression_compression_proto_rawDesc
)

func file_compression_compression_proto_rawDescGZIP() []byte {
	file_compression_compression_proto_rawDescOnce.Do(func() {
		file_compression_compression_proto_rawDescData = protoimpl.X.CompressGZIP(file_compression_compression_proto_rawDescData)
	})
	return file_compression_compression_proto_rawDescData
}

var file_compression_compression_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_compression_compression_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_compression_compression_proto_goTypes = []interface{}{
	(SuccessStatus)(0),          // 0: compression.SuccessStatus
	(*CompressionRequest)(nil),  // 1: compression.CompressionRequest
	(*CompressionResponse)(nil), // 2: compression.CompressionResponse
}
var file_compression_compression_proto_depIdxs = []int32{
	0, // 0: compression.CompressionResponse.success:type_name -> compression.SuccessStatus
	1, // 1: compression.Compression.CompressFile:input_type -> compression.CompressionRequest
	2, // 2: compression.Compression.CompressFile:output_type -> compression.CompressionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_compression_compression_proto_init() }
func file_compression_compression_proto_init() {
	if File_compression_compression_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compression_compression_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compression_compression_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compression_compression_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_compression_compression_proto_goTypes,
		DependencyIndexes: file_compression_compression_proto_depIdxs,
		EnumInfos:         file_compression_compression_proto_enumTypes,
		MessageInfos:      file_compression_compression_proto_msgTypes,
	}.Build()
	File_compression_compression_proto = out.File
	file_compression_compression_proto_rawDesc = nil
	file_compression_compression_proto_goTypes = nil
	file_compression_compression_proto_depIdxs = nil
}
